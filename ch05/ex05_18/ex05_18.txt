/*
 ***************************************************
 *
 * ex05_18.cpp
 * 
 * Deitel - C++ How to Program
 * Exercise 5.18 (What does each of the following statements print?)
 * 
 * Created: Aug 8,2021
 * Author:  Les Vaughn
 * 
 ***************************************************
*/

Assume x = 7, y = 5, z = 3

a) cout << ( x == 7 && y == 5 ) << endl;

   x == 7 is true.  y == 5 is true.  The '&&' condition requires both statemets to be true.
   As ther are, the statement prints 1 for true;

b) cout << ( x == 7 || y == 3 ) << endl;

   x == 7 is true.  y == 3 is not true. The '||' condition requires at least on statement
   to be ture.  As x == 7 is true, the statement prints 1 for true.

c) cout << ( x == 7 && y == 3 ) << endl;

   X == 7 is true.  Y == 3 is false.  The '&&' condition requires both statements to be true.
   As y == 3 is false, the statement prints 0 for false.

d) cout << ( z == 7 || y == 3 ) << endl;

   z == 7 is false.  y == 3 is false. The '||' condition requires at least on statement
   to be true.  As neither statement is true, the statement prints 0 for false.

e) cout << ( x - 2 == 5 && y + 4 == 9 )) << endl;

   x - 2 = 5 is true.  y + 4 == 9 is true.  The '&&' condition requires both statemets to be true.
   As they are, the statement prints 1 for true;

f) cout << ( x >= 7 || y <= 5 ) << endl;

   x >= 7 is true.  Y <= 5 is true.  The '&&' condition requires both statemets to be true.
   As they are, the statement prints 1 for true;

g) cout << ( y != 6 && z != 3 ) << endl;

   y != 6 is true.  z != 3 is false.  The '&&' condition requires both statemets to be true.
   as z 1= 3 is false, the statement prints 0 for false.

h) cout << ( y != 5 || z != 6 ) << endl;

   y != 5 is false.  z != 6 is true.  The '||' condition requires at least on statement
   to be ture. As z != 6 is true, the statement prints 1 for true.

i) cout << ( ! ( y - z - 2 )) << "\t" << ( ! ( y > z )) << endl;

   ! ( y - z - 2 ) is false.  y - z - 2 is equal to 0.  0 represents false.  ! ( false ) means
   true.  As the statement is false and not true,  the statement prints 1 for false.

   Next the statement prints the tab character.

   ! ( y > z ) is false.  y is greater than z.  y > z is true. ! ( true ) is the same as false.
   Therefore, the statement prints 0 for false.

   The final ouput is:
   1  0 
